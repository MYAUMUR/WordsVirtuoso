type: code
files:
- name: src/Main.kt
  visible: true
  text: |-
    // Do not change the code below

    interface ILogHolder {
        fun printLog()
        fun collectLog(log: String)
        var curLog: String
    }

    class Logger : ILogHolder {
        override fun printLog() {
            println(curLog)
        }

        override fun collectLog(log: String) {
            curLog += "\n> $log"
        }

        override var curLog: String = "> Logger initialized."
    }
    // Do not change the code above

    // Introduce the delegate here, following the argument declaration
    class ErrorHandler(base: ILogHolder) // Your code here
    {
        var errorMessage: String = ""
        fun getErrorMessage(msg: String) {
            errorMessage = msg
            logErrorMessage()
        }

        // Your code here
    }

    fun doSomething(handler: ErrorHandler) {
        handler.getErrorMessage("Access denied")
        handler.getErrorMessage("Out of memory")
        handler.getErrorMessage("I'm not an error")
    }

    fun main() {
        val log = Logger()
        val handler = ErrorHandler(log)

        doSomething(handler)

        handler.printLog()
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/21414#comment
status: Solved
feedback:
  message: <html>Correct solution</html>
  time: "Mon, 20 Mar 2023 15:22:01 UTC"
record: -1
submission_language: kotlin
